#!/usr/bin/env bash


#	PSEUDO CODE THAT I HAVE YET TO EVER RUN


#	Processing the raw PhIP-Seq data

#	56 Separately align each sample’s .fastq 
#	file using the Bowtie short read aligner, with the following command:

mkdir -p workdir/alns
bowtie -n 3 -l 100 --best --nomaqround --norc -k 1 -p 4 --quiet \
	-x bowtie_index/mylibrary workdir/reads/sample1.fastq.gz \
	workdir/alns/sample1.aln

#	  -n/--seedmms <int> max mismatches in seed (can be 0-3, default: -n 2)
#	  -l/--seedlen <int> seed length for -n (default: 28)
#	  --nomaqround       disable Maq-like quality rounding for -n (nearest 10 <= 30)
#	  --nofw/--norc      do not align to forward/reverse-complement reference strand
#	  -k <int>           report up to <int> good alignments per read (default: 1)
#	  --best             hits guaranteed best stratum; ties broken by quality
#	  --quiet            print nothing but the alignments
#	  -p/--threads <int> number of alignment threads to launch (default: 1)



#	57 Aggregate each alignment file into a sample count vector using the following command:

phip compute-counts -i workdir/alns -o workdir/counts \
	-r path/to/input/counts.tsv


#	58 Generate (−log10) P values from the counts by fitting a generalized Poisson model and 
#	computing a significance score for each pair of count values. 
#	Specifically, we model the count value Yi for peptide i as

#	in which the functions λ(x) = a x + b and θ(x) = c are fit empirically to the observed data. 
#	For each possible input value x, we compute the maximum likelihood estimates for λ and θ using 
#	the counts of all peptides with x reads, and regress the λ and θ values against the input 
#	counts to get estimated λ and θ as functions of x. The scores can be generated by running 
#	the following command:

phip compute-pvals -i workdir/counts/sample1.tsv \
	-o workdir/mlxp/sample1.mlxp.tsv


#	59 Alternatively, merge the count values into a single tab-delimited file to make it easier 
#	to analyze as a single matrix with the following command:

phip merge-columns -i workdir/mlxp -o mlxp.tsv -p 1



